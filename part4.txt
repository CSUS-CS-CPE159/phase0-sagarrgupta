-[spede] ~ 
21:18:44 $ git config --global user.name "sagarrgupta"
-[spede] ~ 
21:20:56 $ git config --global user.email "gsr1745@gmail.com"
-[spede] ~ 
21:22:45 $ git config --list
user.email=gsr1745@gmail.com
user.name=sagarrgupta
-[spede] ~ 
21:23:28 $ ssh-keygen -t ed25519 -C $(git config --get user.email)
Generating public/private ed25519 key pair.
Enter file in which to save the key (/home/spede/.ssh/id_ed25519): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/spede/.ssh/id_ed25519
Your public key has been saved in /home/spede/.ssh/id_ed25519.pub
The key fingerprint is:
SHA256:cVnS9Hp4f1GPp5AW3ANxdcDNX/05KZPupu4Pp6c8TtM gsr1745@gmail.com
The key's randomart image is:
+--[ED25519 256]--+
|          .o=oo=+|
|           =.=. *|
|        . o o = B|
|         o   O *=|
|        S   B *.+|
|           ..= +.|
|           +.E. o|
|          o.=+  .|
|          +OB.   |
+----[SHA256]-----+
-[spede] ~ 
21:26:39 $ cat ~/.ssh/id_ed25519.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINmzZPvkrrJ6kh+TTVziD/Lq2PYQfSvM/ajeE5NaJtv1 gsr1745@gmail.com
-[spede] ~ 
21:27:14 $ ssh -T git@github.com
The authenticity of host 'github.com (140.82.116.3)' can't be established.
ECDSA key fingerprint is SHA256:p2QAMXNIC1TJYWeIOttrVc98/R1BUFWu3/LiyKgUfQM.
Are you sure you want to continue connecting (yes/no/[fingerprint])? no
Host key verification failed.
![spede] ~ 
21:31:18 $ cat ~/.ssh/id_ed25519.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINmzZPvkrrJ6kh+TTVziD/Lq2PYQfSvM/ajeE5NaJtv1 gsr1745@gmail.com
-[spede] ~ 
21:31:32 $ cat ~/.ssh/ssh -T git@github.com
The authenticity of host 'github.com (140.82.116.4)' can't be established.
ECDSA key fingerprint is SHA256:p2QAMXNIC1TJYWeIOttrVc98/R1BUFWu3/LiyKgUfQM.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'github.com,140.82.116.4' (ECDSA) to the list of known hosts.
Hi sagarrgupta! You've successfully authenticated, but GitHub does not provide shell access.
![spede] ~ 
21:39:03 $ git clone git@github.com: CSUS-CS-CPE159/phase0-sagarrgupta
Cloning into 'CSUS-CS-CPE159/phase0-sagarrgupta'...
fatal: remote error: 
  is not a valid repository name
Visit https://support.github.com/ for help
![spede] ~ 
21:42:22 $ git clone git@github.com:CSUS-CS-CPE159/phase0-sagarrgupta.git
Cloning into 'phase0-sagarrgupta'...
remote: Enumerating objects: 10, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 10 (delta 0), reused 0 (delta 0), pack-reused 6 (from 1)
Receiving objects: 100% (10/10), done.
-[spede] ~ 
21:43:11 $ car

Command 'car' not found, but can be installed with:

sudo apt install ucommon-utils

![spede] ~ 
21:43:26 $ cat
^C
![spede] ~ 
21:43:35 $ cat hello-world
cat: hello-world: No such file or directory
![spede] ~ 
21:43:47 $ ls
bin  CSUS-CS-CPE159  Desktop  Documents  Downloads  phase0-sagarrgupta	Pictures
-[spede] ~ 
21:43:53 $ cd phase0-sagarrgupta/
-[spede] ~/phase0-sagarrgupta (main=)
21:43:59 $ ls
01-hello-world	02-debugging  README.md
-[spede] ~/phase0-sagarrgupta (main=)
21:44:00 $ cd 01-hello-world/
-[spede] ~/phase0-sagarrgupta/01-hello-world (main=)
21:44:11 $ cat
^C
![spede] ~/phase0-sagarrgupta/01-hello-world (main=)
21:45:08 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:45:51 $ 
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:46:06 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:47:30 $ spede-target -q
The SPEDE Target has quit. Exiting...
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:48:59 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:49:13 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:49:24 $ spede-run
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x8a  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1363 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:50:02 $ spede-run -d
Socket './spede.sock' does not exist. Exiting...
![spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:00 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:05 $ spede-run -d
Socket './spede.sock' does not exist. Exiting...
![spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:07 $ spede-run
Socket './spede.sock' does not exist. Exiting...
![spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:16 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:20 $ spede-run
Socket './spede.sock' does not exist. Exiting...
![spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:23 $ ls
build  Makefile  src
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:29 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:37 $ spede-target -q
The SPEDE Target is not running
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:41 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:46 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:57:36 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:57:45 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x8a  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1477 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x0010255d in breakpoint ()
Temporary breakpoint 1 at 0x101183: file src/hello.c, line 5.

Temporary breakpoint 1, main () at src/hello.c:5
5	    printf("Hello, world!\n");
SPEDE GDB$ run
Hello, world!
Welcome to MyOS!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ exit
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
22:03:36 $ spede-target -q
The SPEDE Target has quit. Exiting...
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
22:03:45 $ ls
build  Makefile  part3.txt  src
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
22:03:47 $ mv ~/part3.txt .
mv: cannot stat '/home/spede/part3.txt': No such file or directory
![spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
22:04:40 $ mv part3.txt ..
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
22:06:07 $ ls
build  Makefile  src
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
22:06:09 $ cd ..
-[spede] ~/phase0-sagarrgupta {main %=}
22:06:11 $ ls
01-hello-world	02-debugging  part3.txt  README.md
-[spede] ~/phase0-sagarrgupta {main %=}
22:06:12 $ open part3.txt 

Command 'open' not found, did you mean:

  command 'gopen' from deb gnustep-gui-runtime (0.27.0-5build2)
  command 'pen' from deb pen (0.34.1-1build1)
  command 'wopen' from deb gworkspace.app (0.9.4-2)

Try: sudo apt install <deb name>

![spede] ~/phase0-sagarrgupta {main %=}
22:06:24 $ wopen part3.txt 

Command 'wopen' not found, but can be installed with:

sudo apt install gworkspace.app

![spede] ~/phase0-sagarrgupta {main %=}
22:06:34 $ cat part3.txt 
-[spede] ~ 
21:18:44 $ git config --global user.name "sagarrgupta"
-[spede] ~ 
21:20:56 $ git config --global user.email "gsr1745@gmail.com"
-[spede] ~ 
21:22:45 $ git config --list
user.email=gsr1745@gmail.com
user.name=sagarrgupta
-[spede] ~ 
21:23:28 $ ssh-keygen -t ed25519 -C $(git config --get user.email)
Generating public/private ed25519 key pair.
Enter file in which to save the key (/home/spede/.ssh/id_ed25519): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/spede/.ssh/id_ed25519
Your public key has been saved in /home/spede/.ssh/id_ed25519.pub
The key fingerprint is:
SHA256:cVnS9Hp4f1GPp5AW3ANxdcDNX/05KZPupu4Pp6c8TtM gsr1745@gmail.com
The key's randomart image is:
+--[ED25519 256]--+
|          .o=oo=+|
|           =.=. *|
|        . o o = B|
|         o   O *=|
|        S   B *.+|
|           ..= +.|
|           +.E. o|
|          o.=+  .|
|          +OB.   |
+----[SHA256]-----+
-[spede] ~ 
21:26:39 $ cat ~/.ssh/id_ed25519.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINmzZPvkrrJ6kh+TTVziD/Lq2PYQfSvM/ajeE5NaJtv1 gsr1745@gmail.com
-[spede] ~ 
21:27:14 $ ssh -T git@github.com
The authenticity of host 'github.com (140.82.116.3)' can't be established.
ECDSA key fingerprint is SHA256:p2QAMXNIC1TJYWeIOttrVc98/R1BUFWu3/LiyKgUfQM.
Are you sure you want to continue connecting (yes/no/[fingerprint])? no
Host key verification failed.
![spede] ~ 
21:31:18 $ cat ~/.ssh/id_ed25519.pub
ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINmzZPvkrrJ6kh+TTVziD/Lq2PYQfSvM/ajeE5NaJtv1 gsr1745@gmail.com
-[spede] ~ 
21:31:32 $ cat ~/.ssh/ssh -T git@github.com
The authenticity of host 'github.com (140.82.116.4)' can't be established.
ECDSA key fingerprint is SHA256:p2QAMXNIC1TJYWeIOttrVc98/R1BUFWu3/LiyKgUfQM.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'github.com,140.82.116.4' (ECDSA) to the list of known hosts.
Hi sagarrgupta! You've successfully authenticated, but GitHub does not provide shell access.
![spede] ~ 
21:39:03 $ git clone git@github.com: CSUS-CS-CPE159/phase0-sagarrgupta
Cloning into 'CSUS-CS-CPE159/phase0-sagarrgupta'...
fatal: remote error: 
  is not a valid repository name
Visit https://support.github.com/ for help
![spede] ~ 
21:42:22 $ git clone git@github.com:CSUS-CS-CPE159/phase0-sagarrgupta.git
Cloning into 'phase0-sagarrgupta'...
remote: Enumerating objects: 10, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 10 (delta 0), reused 0 (delta 0), pack-reused 6 (from 1)
Receiving objects: 100% (10/10), done.
-[spede] ~ 
21:43:11 $ car

Command 'car' not found, but can be installed with:

sudo apt install ucommon-utils

![spede] ~ 
21:43:26 $ cat
^C
![spede] ~ 
21:43:35 $ cat hello-world
cat: hello-world: No such file or directory
![spede] ~ 
21:43:47 $ ls
bin  CSUS-CS-CPE159  Desktop  Documents  Downloads  phase0-sagarrgupta	Pictures
-[spede] ~ 
21:43:53 $ cd phase0-sagarrgupta/
-[spede] ~/phase0-sagarrgupta (main=)
21:43:59 $ ls
01-hello-world	02-debugging  README.md
-[spede] ~/phase0-sagarrgupta (main=)
21:44:00 $ cd 01-hello-world/
-[spede] ~/phase0-sagarrgupta/01-hello-world (main=)
21:44:11 $ cat
^C
![spede] ~/phase0-sagarrgupta/01-hello-world (main=)
21:45:08 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:45:51 $ 
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:46:06 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:47:30 $ spede-target -q
The SPEDE Target has quit. Exiting...
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:48:59 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:49:13 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:49:24 $ spede-run
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x8a  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1363 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:50:02 $ spede-run -d
Socket './spede.sock' does not exist. Exiting...
![spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:00 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:05 $ spede-run -d
Socket './spede.sock' does not exist. Exiting...
![spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:07 $ spede-run
Socket './spede.sock' does not exist. Exiting...
![spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:16 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:20 $ spede-run
Socket './spede.sock' does not exist. Exiting...
![spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:23 $ ls
build  Makefile  src
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:29 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:37 $ spede-target -q
The SPEDE Target is not running
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:41 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:56:46 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:57:36 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/01-hello-world {main %=}
21:57:45 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x8a  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1477 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x0010255d in breakpoint ()
Temporary breakpoint 1 at 0x101183: file src/hello.c, line 5.

Temporary breakpoint 1, main () at src/hello.c:5
5	    printf("Hello, world!\n");
SPEDE GDB$ run
Hello, world!
Welcome to MyOS!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ 
-[spede] ~/phase0-sagarrgupta {main %=}
22:06:54 $ git add part3.txt 
-[spede] ~/phase0-sagarrgupta {main +%=}
22:07:54 $ git commit -m "Added part3.txt with console output"
[main 6033bc1] Added part3.txt with console output
 1 file changed, 176 insertions(+)
 create mode 100644 part3.txt
-[spede] ~/phase0-sagarrgupta {main %>}
22:08:21 $ git push origin main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 2.19 KiB | 447.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To github.com:CSUS-CS-CPE159/phase0-sagarrgupta.git
   4563780..6033bc1  main -> main
-[spede] ~/phase0-sagarrgupta {main %=}
22:08:33 $ cd 02-debugging/
-[spede] ~/phase0-sagarrgupta/02-debugging {main %=}
22:09:49 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/phase0-sagarrgupta/02-debugging {main %=}
22:10:20 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/02-debugging {main %=}
22:10:24 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1402 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x00102669 in breakpoint ()
Temporary breakpoint 1 at 0x1011ed: file src/main.c, line 34.

Temporary breakpoint 1, main () at src/main.c:34
34	    char buf[128] = {0};
SPEDE GDB$ c
Continuing.
Hello, world!
Welcome to MyOS!
NULL pointer!
The buffer size is 0 bytes
NULL pointer!
CPE/CSC 159 for Spring/Fall 1970 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ break puts
Breakpoint 2 at 0x101182: file src/main.c, line 18.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x00101182 in puts at src/main.c:18
SPEDE GDB$ c
The program is not being run.
SPEDE GDB$ spede-run -d
Undefined command: "spede-run".  Try "help".
SPEDE GDB$ continue
The program is not being run.
SPEDE GDB$ quit
-[spede] ~/phase0-sagarrgupta/02-debugging {main %=}
22:13:11 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1402 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x00102669 in breakpoint ()
Temporary breakpoint 1 at 0x1011ed: file src/main.c, line 34.

Temporary breakpoint 1, main () at src/main.c:34
34	    char buf[128] = {0};
SPEDE GDB$ break puts
Breakpoint 2 at 0x101182: file src/main.c, line 18.
SPEDE GDB$ info
List of info subcommands:

info address -- Describe where symbol SYM is stored.
info all-registers -- List of all registers and their contents, for selected stack frame.
info args -- All argument variables of current stack frame or those matching REGEXPs.
info auto-load -- Print current status of auto-loaded files.
info auxv -- Display the inferior's auxiliary vector.
info bookmarks -- Status of user-settable bookmarks.
info breakpoints, info b -- Status of specified breakpoints (all user-settable breakpoints if no argument).
info classes -- All Objective-C classes, or those matching REGEXP.
info common -- Print out the values contained in a Fortran COMMON block.
info connections -- Target connections in use.
info copying -- Conditions for redistributing copies of GDB.
info dcache -- Print information on the dcache performance.
info display -- Expressions to display when program stops, with code numbers.
info exceptions -- List all Ada exception names.
info extensions -- All filename extensions associated with a source language.
info files -- Names of targets and files being debugged.
info float -- Print the status of the floating point unit.
info frame, info f -- All about the selected stack frame.
info frame-filter -- List all registered Python frame-filters.
info functions -- All function names or those matching REGEXPs.
info guile, info gu -- Prefix command for Guile info displays.
info inferiors -- Print a list of inferiors being managed.
info line -- Core addresses of the code for a source line.
info locals -- All local variables of current stack frame or those matching REGEXPs.
info macro -- Show the definition of MACRO, and it's source location.
info macros -- Show the definitions of all macros at LINESPEC, or the current source location.
info mem -- Memory region attributes.
info module -- Print information about modules.
info modules -- All module names, or those matching REGEXP.
info os -- Show OS data ARG.
info pretty-printer -- GDB command to list all registered pretty-printers.
info probes -- Show available static probes.
info proc -- Show additional information about a process.
info program -- Execution status of the program.
info record, info rec -- Info record options.
info registers, info r -- List of integer registers and their contents, for selected stack frame.
info scope -- List the variables local to a scope.
info selectors -- All Objective-C selectors, or those matching REGEXP.
info sharedlibrary, info dll -- Status of loaded shared object libraries.
info signals, info handle -- What debugger does when program gets various signals.
info skip -- Display the status of skips.
info source -- Information about the current source file.
info sources -- All source files in the program or those matching REGEXP.
info stack, info s -- Backtrace of the stack, or innermost COUNT frames.
info static-tracepoint-markers -- List target static tracepoints markers.
info symbol -- Describe what symbol is at location ADDR.
info target -- Names of targets and files being debugged.
info tasks -- Provide information about all known Ada tasks.
info terminal -- Print inferior's saved terminal status.
info threads -- Display currently known threads.
info tracepoints, info tp -- Status of specified tracepoints (all tracepoints if no argument).
info tvariables -- Status of trace state variables and their values.
info type-printers -- GDB command to list all registered type-printers.
info types -- All type names, or those matching REGEXP.
info unwinder -- GDB command to list unwinders.
info variables -- All global and static variable names or those matching REGEXPs.
info vector -- Print the status of the vector unit.
info vtbl -- Show the virtual function table for a C++ object.
info warranty -- Various kinds of warranty you do not have.
info watchpoints -- Status of specified watchpoints (all watchpoints if no argument).
info win -- List of all displayed windows.
info xmethod -- GDB command to list registered xmethod matchers.

Type "help info" followed by info subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x00101182 in puts at src/main.c:18
SPEDE GDB$ continue
Continuing.
Hello, world!
Welcome to MyOS!

Breakpoint 2, puts (str=0x104213 "Hello, World!\n") at src/main.c:18
18	    if (str) {
SPEDE GDB$ list
13	/**
14	 * Prints a string to the screen starting at 0, 0
15	 * @param str pointer to the string to print
16	 */
17	void puts(char *str) {
18	    if (str) {
19	        printf("NULL pointer!\n");
20	        return;
21	    }
22	
SPEDE GDB$ print str
$1 = 0x104213 "Hello, World!\n"
SPEDE GDB$ step
19	        printf("NULL pointer!\n");
SPEDE GDB$ step
NULL pointer!
20	        return;
SPEDE GDB$ continue
Continuing.
The buffer size is 0 bytes

Breakpoint 2, puts (str=0x10dfc "welcome to MyOS!\n") at src/main.c:18
18	    if (str) {
SPEDE GDB$ jump +3
Continuing at 0x10119a.
CPE/CSC 159 for Spring/Fall 1970 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ break strlen
Breakpoint 3 at 0x101175: file src/main.c, line 10.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x00101182 in puts at src/main.c:18
	breakpoint already hit 2 times
3       breakpoint     keep y   0x00101175 in strlen at src/main.c:10
SPEDE GDB$ continue
The program is not being run.
SPEDE GDB$ spede-target -q
Undefined command: "spede-target".  Try "help".
SPEDE GDB$ quit
-[spede] ~/phase0-sagarrgupta/02-debugging {main %=}
22:20:11 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1402 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x00102669 in breakpoint ()
Temporary breakpoint 1 at 0x1011ed: file src/main.c, line 34.

Temporary breakpoint 1, main () at src/main.c:34
34	    char buf[128] = {0};
SPEDE GDB$ info break
No breakpoints or watchpoints.
SPEDE GDB$ break strlen
Breakpoint 2 at 0x101175: file src/main.c, line 10.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x00101175 in strlen at src/main.c:10
SPEDE GDB$ c
Continuing.
Hello, world!
Welcome to MyOS!
NULL pointer!

Breakpoint 2, strlen (str=0x10dfc "welcome to MyOS!\n") at src/main.c:10
10	    return 0;
SPEDE GDB$ list
5	 * @param str pointer to the string
6	 * @return value indicating the length of the string
7	 */
8	int strlen(char *str) {
9	    //Implement me!
10	    return 0;
11	}
12	
13	/**
14	 * Prints a string to the screen starting at 0, 0
SPEDE GDB$ quit
-[spede] ~/phase0-sagarrgupta/02-debugging {main %=}
22:22:06 $ ls
build  Makefile  spede.sock  src
-[spede] ~/phase0-sagarrgupta/02-debugging {main %=}
22:22:13 $ cd src
-[spede] ~/phase0-sagarrgupta/02-debugging/src {main %=}
22:22:26 $ ls
main.c
-[spede] ~/phase0-sagarrgupta/02-debugging/src {main %=}
22:22:28 $ cd .
-[spede] ~/phase0-sagarrgupta/02-debugging/src {main %=}
22:22:34 $ cd ..
-[spede] ~/phase0-sagarrgupta/02-debugging {main %=}
22:22:36 $ nano src/main.c 
-[spede] ~/phase0-sagarrgupta/02-debugging {main *%=}
22:24:57 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/02-debugging {main *%=}
22:25:01 $ spede-target
Error: The SPEDE Target is already running and can't be started again with the same socket
![spede] ~/phase0-sagarrgupta/02-debugging {main *%=}
22:25:10 $ spede-target -q
The SPEDE Target has quit. Exiting...
-[spede] ~/phase0-sagarrgupta/02-debugging {main *%=}
22:25:19 $ spede-target 
Launching SPEDE target to run in the background
-[spede] ~/phase0-sagarrgupta/02-debugging {main *%=}
22:25:24 $ spede-target -q
The SPEDE Target has quit. Exiting...
-[spede] ~/phase0-sagarrgupta/02-debugging {main *%=}
22:25:29 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/phase0-sagarrgupta/02-debugging {main *%=}
22:25:31 $ spede-target 
Launching SPEDE target to run in the background
-[spede] ~/phase0-sagarrgupta/02-debugging {main *%=}
22:25:37 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1294 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x00102689 in breakpoint ()
Temporary breakpoint 1 at 0x10120a: file src/main.c, line 37.

Temporary breakpoint 1, main () at src/main.c:37
37	    char buf[128] = {0};
SPEDE GDB$ break puts
Breakpoint 2 at 0x10119f: file src/main.c, line 21.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x0010119f in puts at src/main.c:21
SPEDE GDB$ continue
Continuing.
Hello, world!
Welcome to MyOS!

Breakpoint 2, puts (str=0x104233 "Hello, World!\n") at src/main.c:21
21	    if (str) {
SPEDE GDB$ list
16	/**
17	 * Prints a string to the screen starting at 0, 0
18	 * @param str pointer to the string to print
19	 */
20	void puts(char *str) {
21	    if (str) {
22	        printf("NULL pointer!\n");
23	        return;
24	    }
25	
SPEDE GDB$ continue
Continuing.
NULL pointer!
The buffer size is 0 bytes

Breakpoint 2, puts (str=0x10dfc "welcome to MyOS!\n") at src/main.c:21
21	    if (str) {
SPEDE GDB$ jump +3
Continuing at 0x1011b7.
CPE/CSC 159 for Spring/Fall 1970 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ quit
-[spede] ~/phase0-sagarrgupta/02-debugging {main *%=}
22:27:57 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (1530 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x00102689 in breakpoint ()
Temporary breakpoint 1 at 0x10120a: file src/main.c, line 37.

Temporary breakpoint 1, main () at src/main.c:37
37	    char buf[128] = {0};
SPEDE GDB$ break strlen
Breakpoint 2 at 0x101178: file src/main.c, line 9.
SPEDE GDB$ c
Continuing.
Hello, world!
Welcome to MyOS!
NULL pointer!

Breakpoint 2, strlen (str=0x10dfc "welcome to MyOS!\n") at src/main.c:9
9	    int len = 0;
SPEDE GDB$ backtrace
#0  strlen (str=0x10dfc "welcome to MyOS!\n") at src/main.c:9
#1  0x00101299 in main () at src/main.c:48
SPEDE GDB$ info args
str = 0x10dfc "welcome to MyOS!\n"
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x00101178 in strlen at src/main.c:9
	breakpoint already hit 1 time
SPEDE GDB$ delete 2
SPEDE GDB$ info break
No breakpoints or watchpoints.
SPEDE GDB$ break main.c:49
Breakpoint 3 at 0x1012ad: file src/main.c, line 49.
SPEDE GDB$ break main.c:51
Breakpoint 4 at 0x1012bf: file src/main.c, line 51.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
3       breakpoint     keep y   0x001012ad in main at src/main.c:49
4       breakpoint     keep y   0x001012bf in main at src/main.c:51
SPEDE GDB$ continye
Undefined command: "continye".  Try "help".
SPEDE GDB$ continye
Undefined command: "continye".  Try "help".
SPEDE GDB$ c
Continuing.
The buffer size is 0 bytes

Breakpoint 3, main () at src/main.c:49
49	    puts(buf);
SPEDE GDB$ list
44	
45	    puts("Hello, World!\n");
46	
47	    snprintf(buf, sizeof(buf), "welcome to %s!\n", OS_NAME);
48	    printf("The buffer size is %d bytes\n", strlen(buf));
49	    puts(buf);
50	
51	    printf("CPE/CSC 159 for Spring/Fall %d will be fun!\n", year);
52	}
SPEDE GDB$ print buf
$1 = "welcome to MyOS!\n", '\000' <repeats 110 times>
SPEDE GDB$ set buf[0] = 'W'
SPEDE GDB$ print buf
$2 = "Welcome to MyOS!\n", '\000' <repeats 110 times>
SPEDE GDB$ c
Continuing.
NULL pointer!

Breakpoint 4, main () at src/main.c:51
51	    printf("CPE/CSC 159 for Spring/Fall %d will be fun!\n", year);
SPEDE GDB$ print year
$3 = 0x7b2
SPEDE GDB$ print /d year
$4 = 1970
SPEDE GDB$ set year=2025
SPEDE GDB$ print /d year
$5 = 8229
SPEDE GDB$ print year
$6 = 0x2025
SPEDE GDB$ set year=2025
SPEDE GDB$ print /d year
$7 = 8229
SPEDE GDB$ set year=2025.
SPEDE GDB$ print /d year
$8 = 2025
SPEDE GDB$ continue
Continuing.
CPE/CSC 159 for Spring/Fall 2025 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ 
